#!/bin/bash
# -*- mode: sh -*-
# Â© Copyright IBM Corporation 2015.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

export PATH=$PATH:$MQLIGHT_HOME:$MQLIGHT_HOME/runtime/bin
export AMQ_INHIBIT_O_DIRECT=TRUE
export MQS_IPC_HOST=docker-container
CACHE_FILE=$MQLIGHT_DOCKER_HOME/mqlight-data.tar.gz
CONFIG=""

config()
{
	if [ -n "$MQLIGHT_USER" ]; then
		CONFIG="$CONFIG --user $MQLIGHT_USER"
	fi
	if [ -n "$MQLIGHT_PASSWORD" ]; then
		CONFIG="$CONFIG --password $MQLIGHT_PASSWORD"
	fi
	if [ -n "$MQLIGHT_TLS_PASSPHRASE" ]; then
		CONFIG="$CONFIG --ssl-passphrase $MQLIGHT_TLS_PASSPHRASE"
	fi
	if [ -n "$MQLIGHT_TLS_KEYSTORE" ]; then
		CONFIG="$CONFIG --ssl-keystore $MQLIGHT_TLS_KEYSTORE"
	fi
}

initialize()
{
	mqlight-config -v >/dev/null
	mqlight-config --accept-license >/dev/null
	mqlight-start --no-browser >/dev/null
	mqlight-stop >/dev/null
	rm -rf $MQLIGHT_DATA_PATH/mqm/.lapc
	GZIP=-9 tar -c -z --owner=$MQLIGHT_DOCKER_USER --group=$MQLIGHT_DOCKER_GROUP --numeric-owner \
		    -f $CACHE_FILE -C $MQLIGHT_DATA_PATH .
	rm -rf $MQLIGHT_DATA_PATH/*
	touch $MQLIGHT_DATA_PATH/.keepfile
}

chownDataPath()
{
	sudo chown -R $MQLIGHT_DOCKER_USER:$MQLIGHT_DOCKER_GROUP $MQLIGHT_DATA_PATH >/dev/null 2>&1
}

licenseCheck()
{
	if [ "$LICENSE" = "accept" ]; then
		CONFIG="$CONFIG --accept-license"
		return
	elif [ "$LICENSE" = "view" ]; then
		mqlight-config --show-license
		exit 1
	else
		echo -e "Set environment variable LICENSE=accept to indicate acceptance of license terms and conditions.\n\nLicense agreements and information can be viewed by running this image with the environment variable LICENSE=view."
		exit 2
	fi
}

monitor()
{
	echo "----------------------------------------"
	echo "Monitorando S[AiB<] MQ Light..."

	# Loop until "dspmq" says the queue manager is running
	until [ "`dspmq -n | cut -f3 -d"("`" == "RUNNING)" ]; do
		sleep 1
	done
	dspmq

	# Loop until "dspmq" says the queue manager is not running any more
	until [ "`dspmq -n | cut -f3 -d"("`" != "RUNNING)" ]; do
		sleep 5
	done
	dspmq
}

runmqras()
{
	echo "$MQLIGHT_HOME/runtime/bin/runmqras -section all -outputdir $MQLIGHT_DATA_PATH/mqm/errors"
	$MQLIGHT_HOME/runtime/bin/runmqras -section all -outputdir $MQLIGHT_DATA_PATH/mqm/errors
}

start()
{
	# Check that the MQ Light data path is hosted by a suitable file system.
	# Note: because MQ Light uses memory-mapped files you cannot map
	# MQLIGHT_DATA_PATH to a vboxsf file system due to VirtualBox defect 819
	# (https://www.virtualbox.org/ticket/819).
	FSTYPE=$(df --output=fstype $MQLIGHT_DATA_PATH | tail -1)
	if [ ${FSTYPE} = "vboxsf" ]; then
		echo -e "\nERROR: $MQLIGHT_DATA_PATH cannot be mapped to a vboxsf file system. Please specify an alternative volume.\n" 1>&2
		exit 1
	fi

	# Extract the MQ Light data on first use...
	if [ ! -f $MQLIGHT_DATA_PATH/mqm/mqs.ini ]; then
		echo "Initializing IBM MQ Light"
		tar zxf $CACHE_FILE -C $MQLIGHT_DATA_PATH
	elif [ -n "$MQLIGHT_REGENERATE_DATA" ]; then
		echo "Reinitializing IBM MQ Light"
		tar zxf $CACHE_FILE -C $MQLIGHT_DATA_PATH
	fi
	rm -f $MQLIGHT_DATA_PATH/mqm/qmgrs/@SYSTEM/*.inf*

	# Set MQLIGHT_TRACE to trace MQ Light as it runs
	if [ -n "$MQLIGHT_TRACE" ]; then
		starttrace
	fi

	# Now start MQ Light
	( set -x ; mqlight-config -v ; mqlight-config $CONFIG ;	mqlight-start --no-browser )
}

starttrace()
{
	echo "Starting MQ Light trace"
	rm -f $MQLIGHT_DATA_PATH/mqm/trace/*
	strmqtrc -t detail -t all
}

stop()
{
	if [ -n "$MQLIGHT_TRACE" ]; then
		stoptrace
	fi
	mqlight-stop
	dspmq
	exit
}

stoptrace()
{
	echo "Stopping MQ Light trace"
	endmqtrc
	echo "Collecting MQ Light diagnostic information and formatting trace"
	runmqras
}

case "$1" in
	initialize)	initialize;;
	chown)		chownDataPath;;
	runmqras)	runmqras;;
	starttrace)	starttrace;;
	stoptrace)	stoptrace;;
	stop)		stop;;
	start|*)	chownDataPath
			licenseCheck
			config
			start
			trap stop SIGTERM SIGINT
			monitor
			;;
esac
